<!DOCTYPE html>

<!--
* CoreUI - Free Bootstrap Admin Template
* @version v5.1.1
* @link https://coreui.io/product/free-bootstrap-admin-template/
* Copyright (c) 2024 creativeLabs Łukasz Holeczek
* Licensed under MIT (https://github.com/coreui/coreui-free-bootstrap-admin-template/blob/main/LICENSE)
-->

<html lang="en">
  <head>
    <!-- Critical Theme Loader (MUST be first) -->
    <script>
      (function(){
        // 1. Immediately set theme from localStorage (fallback to light)
        const savedTheme = localStorage.getItem('coreui-theme') || 'light';

        // 2. Apply to HTML element BEFORE anything renders
        document.documentElement.dataset.coreuiTheme = savedTheme;
        document.documentElement.className = savedTheme;

        // 3. Hide body until fully loaded (prevents flash)
        document.write(`
          <style id="temp-hide">
            body { opacity: 0 !important; }
            .light { color-scheme: light; }
            .dark { color-scheme: dark; }
          </style>
        `);
      })();
    </script>

    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0, shrink-to-fit=no">
    <meta name="description" content="KubeDash - Open Source Kubernetes Admin Dashboard">
    <meta name="author" content="Páldi Balázs">
    <title>KubeDash</title>

    <!-- favicon -->
    <link rel="shortcut icon" href="{{ url_for('static',filename='/favicon.ico') }}">
    
    <link rel="manifest" href="{{ url_for('static',filename='/assets/favicon/manifest.json') }}">
    <meta name="msapplication-TileColor" content="#ffffff">
    <meta name="msapplication-TileImage" content="{{ url_for('static',filename='/assets/favicon/ms-icon-144x144.png') }}">
    <meta name="theme-color" content="#ffffff">

    <!-- Vendors styles-->
    <link rel="stylesheet" href="{{ url_for('static',filename='/vendor/simplebar/css/simplebar.css') }}">
    <link rel="stylesheet" href="{{ url_for('static',filename='/css/vendors/simplebar.css') }}">

    <!-- Main styles for this application-->
    <link href="{{ url_for('static',filename='/css/style.css') }}" rel="stylesheet">
    <link href="{{ url_for('static',filename='/vendor/custom/custom.css') }}" rel="stylesheet">
    
    <!-- Page head_css -->
    {% block head_css %}
    {% endblock %}

    <!-- Add this right before </head> -->
    <script>
      document.addEventListener('DOMContentLoaded', function() {
        // Remove the temporary hide style
        const tempStyle = document.getElementById('temp-hide');
        if (tempStyle) tempStyle.remove();
        
        // Force repaint to ensure smooth transition
        setTimeout(() => {
          document.body.style.opacity = '1';
        }, 10);
      });
    </script>
  </head>
  <body>

    <!-- Toast container with stacking -->
    <div class="position-fixed top-0 end-0 p-3" style="z-index: 11">
      <div id="toastStack" class="toast-container"></div>
    </div>

    <!-- Toast template (hidden by default) -->
    <div id="toastTemplate" class="toast d-none" role="alert" aria-live="assertive" aria-atomic="true">
      <div class="toast-header">
        <strong class="me-auto toast-title">Notification</strong>
        <button type="button" class="btn-close" data-bs-dismiss="toast" aria-label="Close"></button>
      </div>
      <div class="toast-body"></div>
    </div>

    <!-- Page body -->
    {% block content %}
    {% endblock %}

    <!-- CoreUI and necessary plugins-->
    <script src="{{ url_for('static',filename='/vendor/@coreui/coreui/js/coreui.bundle.min.js') }}"></script>
    <script src="{{ url_for('static',filename='/vendor/simplebar/js/simplebar.min.js') }}"></script>

    <!-- We use those styles to show code examples, you should remove them in your application.-->
    <script src="{{ url_for('static',filename='/js/config.js') }}"></script>
    <script src="{{ url_for('static',filename='/js/color-modes.js') }}"></script>

    <script>
      const header = document.querySelector('header.header');

      document.addEventListener('scroll', () => {
        if (header) {
          header.classList.toggle('shadow-sm', document.documentElement.scrollTop > 0);
        }
      });
    </script>

    <!-- Toast notification script -->
    <script>
      function showToast(type, message, title = 'Notification') {
        const container = document.getElementById('toastStack');
        const template = document.getElementById('toastTemplate');
        const toastEl = template.cloneNode(true);
        
        toastEl.classList.remove('d-none');
        toastEl.querySelector('.toast-title').textContent = title;
        toastEl.querySelector('.toast-body').textContent = message;
        
        // Add styling based on type
        if (type === 'success') {
          toastEl.classList.add('bg-success', 'text-white');
        } else if (type === 'error') {
          toastEl.classList.add('bg-danger', 'text-white');
        }
        
        container.appendChild(toastEl);
        const toast = new bootstrap.Toast(toastEl, { autohide: true, delay: 5000 });
        toast.show();
        
        // Remove toast after it's hidden
        toastEl.addEventListener('hidden.bs.toast', () => {
          toastEl.remove();
        });
      }

      // Example usage:
      // showToast('success', 'Item created successfully!', 'Success');
      // showToast('error', 'Failed to save item', 'Error');
    </script>


    <!-- Page tail_js -->
    {% block add_tail_js %}
    {% endblock %}

    <!-- Page tail -->
    {% block tail %}
    {% endblock %}
  </body>
</html>