[project]
name = "KubeDash"
version = "4.0.0"
description = "KubeDash is a kubernetes Dashboard"
license = "Apache-2.0"
authors = [
    {name = "Páldi Balázs",email = "devopstales2@gmail.com"}
]
readme = "README.md"
requires-python = ">=3.11"

[tool.poetry.dependencies]
python = ">=3.11,<3.13"
Flask = "3.0.2"
weasyprint = "^56.1"
Werkzeug = "3.0.6"
flask-login = "0.6.3"
flask-sqlalchemy = "3.0.5"
eventlet = "0.35.2"
flask-session = "0.8.0"
flask-wtf = "1.2.1"
flask-socketio = "5.3.4"
pyyaml = "^6.0.2"
jinja2 = "3.1.6"
dnspython = "2.6.1"
pytz = "2023.3.post1"
configparser = "7.0.0"
sqlalchemy = "2.0.17"
sqlalchemy-utils = "0.41.1"
flask-migrate = "4.0.5"
requests-oauthlib = "2.0.0"
flask-cors = "6.0.0"
flask-talisman = "1.1.0"
kubernetes = "26.1.0"
pybase64 = "1.4.0"
pyvis = "0.3.2"
gevent-websocket = "0.10.1"
opentelemetry-sdk = "1.28.2"
opentelemetry-api = "1.28.2"
opentelemetry-exporter-otlp-proto-http = "1.28.2"
opentelemetry-semantic-conventions = "0.49b2"
opentelemetry-instrumentation-sqlalchemy = "0.49b2"
opentelemetry-instrumentation-flask = "0.49b2"
opentelemetry-instrumentation-logging = "0.49b2"
opentelemetry-instrumentation-requests = "0.49b2"
prometheus-flask-exporter = "0.23.1"
certifi = "2024.07.04"
setuptools = "78.1.1"
pyopenssl = "25.1.0"
cryptography = "44.0.1"
ipython = "8.27.0"
gevent = "23.9.0"
urllib3 = "2.5.0"
requests = "2.32.4"
zipp = "3.19.1"
apiflask = {extras = ["yaml"], version = "^2.3.2"}
watchdog = "^6.0.0"
gunicorn-color = "^0.1.0"
psycopg2-binary = "^2.9.10"
flask-smorest = "^0.46.1"
h11 = "0.16.0"
swagger-ui-bundle = "^1.1.0"
flask-caching = "^2.3.1"
plotly = "^6.0.0"
redis = "^5.2.1"
colorlog = "^6.9.0"
protobuf = "5.29.5"
statsd = "^4.0.1"
prometheus-client = "^0.22.1"
gunicorn = {extras = ["statsd"], version = "^23.0.0"}


[tool.poetry.group.dev.dependencies]
black = "^24.3.0"
pytest = "^7.1.3"
coverage = "^6.4.4"
isort = "^5.10.1"
pip-audit = "^2.4.4"
autoflake = "^1.6.1"
safety = "^3.3.1"
flake8 = "^7.1.2"

#[tool.poetry.requires-plugins]
#poetry-plugin-export = ">=1.8"


[build-system]
requires = ["poetry-core>=2.0.0,<3.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 120
include = '\.pyi?$'
known_first_party = ["app", "tests"]
exclude='(\.eggs|\.git|\.idea|\.pytest_cache|venv|build|dist|logs)'

[tool.pytest.ini_options]
log_cli = true
filterwarnings = [
    "ignore::urllib3.exceptions.InsecureRequestWarning",
    "ignore::DeprecationWarning",
    "ignore::sqlalchemy.exc.SAWarning",
]
pythonpath = "."
live_server_scope = "function"

[tool.coverage.run]
branch = true
source = ["app"]
command_line = "-m pytest tests --junitxml reports/test.xml --durations 0 --verbose"

[tool.coverage.xml]
output = "reports/coverage.xml"

[tool.coverage.html]
directory = "reports/coverage_html"

[tool.autoflake]
recursive = true
remove-all-unused-imports = true
remove-unused-variables = true
ignore-init-module-imports = true
exclude = ".git,.idea,.pytest_cache,__pycache__,logs,static,test/reports,venv,.venv"
