name: Release
on:
  push:
    tags:
      - "*.*"

jobs:
  build-kubedash:
    name: Build kubedash
    runs-on: ubuntu-20.04
    permissions:
      contents: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          persist-credentials: true

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Prepare kubedash
        id: prep_kubedash
        run: |
          cp -r src/kubedash docker/kubedash
          rm -rf docker/kubedash/kubedash/instance/
          rm -rf docker/kubedash/kubedash/tests/
          rm -rf docker/kubedash/kubedash/.pytest_cache/
          rm -rf docker/kubedash/kubedash/.vscode/
          rm -rf docker/kubedash/kubedash/__pycache__/
          rm -rf docker/kubedash/kubedash/functions/__pycache__/

      - name: Build amd64 kubedash
        uses: docker/build-push-action@v3.3.0
        with:
          context: docker/kubedash/
          build-args:
            ARCH=amd64/
          tags: devopstales/kubedash:${{github.ref_name}}-amd64
          push: true
          provenance: false

      - name: Build arm64v8 kubedash
        uses: docker/build-push-action@v3.3.0
        with:
          context: docker/kubedash/
          build-args:
            ARCH=arm64v8/
          tags: devopstales/kubedash:${{github.ref_name}}-arm64v8
          push: true
          provenance: false

      - name: Create and push kubedash manifest images
        uses: Noelware/docker-manifest-action@master
        with:
          inputs: devopstales/kubedash:${{github.ref_name}}
          images: devopstales/kubedash:${{github.ref_name}}-amd64,devopstales/kubedash:${{github.ref_name}}-arm64v8
          push: true

  release:
    name: Create Release
    runs-on: ubuntu-20.04
    needs:
      - build-kubedash
    steps:
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GH_PAT }}
        with:
          tag_name: ${{github.ref_name}}
          release_name: Release ${{github.ref_name}}
          body: |
            ### Changes in this Release
          draft: true
          prerelease: false