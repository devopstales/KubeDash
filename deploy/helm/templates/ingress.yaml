{{- if .Values.ingress.enabled -}}
{{- if not .Values.route.enabled -}}
apiVersion: {{ include "common.capabilities.ingress.apiVersion" . }}
kind: Ingress
metadata:
  name: {{ include "kubedash.fullname" . }}-ingress
  labels:
    app: kubedash
    {{- include "kubedash.labels" . | nindent 4 }}
  annotations:
    {{- if .Values.ingress.tls.enabled }}
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    {{- end }}
    {{- if .Values.ingress.whitelist.enabled }}
    {{- $last := sub (len .Values.ingress.whitelist.ips) 1 }}
    {{- range $index, $ip := .Values.ingress.whitelist.ips }}
        nginx.ingress.kubernetes.io/whitelist-source-range: "{{ $ip }}{{ if ne $index $last }}, {{ end }}"
    {{- end }}
    {{- end }}
    nginx.ingress.kubernetes.io/proxy-body-size: 10m
    nginx.ingress.kubernetes.io/proxy-read-timeout: "3600"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "3600"
    nginx.ingress.kubernetes.io/server-snippets: |
      location / {
        proxy_set_header Upgrade $http_upgrade;
        proxy_http_version 1.1;
        proxy_set_header X-Forwarded-Host $http_host;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-For $remote_addr;
        proxy_set_header Host $host;
        proxy_set_header Connection "upgrade";
        proxy_cache_bypass $http_upgrade;
      }
    {{- if .Values.ingress.tls.certManager.enabled }}
    cert-manager.io/cluster-issuer: "{{ .Values.ingress.tls.certManager.clusterIssuer }}"
    {{- end }}
{{- with .Values.ingress.annotations }}
{{ toYaml . | indent 4 }}
{{- end }}
spec:
  {{- if and .Values.ingress.className (semverCompare ">=1.18-0" .Capabilities.KubeVersion.GitVersion) }}
  ingressClassName: {{ .Values.ingress.className }}
  {{- end }}
{{- if .Values.ingress.tls.enabled }}
  tls:
  - hosts:
    - {{ .Values.ingress.url }}
    {{- if .Values.ingress.tls.certManager.enabled }}
    secretName: {{ include "kubedash.fullname" . }}-ingress-tls
    {{- else if .Values.ingress.tls.tlsSecret }}
    secretName: {{ .Values.ingress.tls.tlsSecret }}
    {{- end }}
{{- end }}
  rules:
    - host: "{{ .Values.ingress.url }}"
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: {{ include "kubedash.fullname" . }}
                port: 
                  number: 8000
{{- end }}
{{- end }}
