apiVersion: {{ include "common.capabilities.deployment.apiVersion" . }}
kind: Deployment
metadata:
  name: {{ include "kubedash.fullname" . }}
  labels:
    app: kubedash
    {{- include "kubedash.labels" . | nindent 4 }}
    checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . |  sha256sum | trunc 63 }}
spec:
  replicas: {{ .Values.replicas }}
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: "100%"
{{- if gt .Values.replicas 1.0 }}
      maxUnavailable: "50%"
{{- else }}
      maxUnavailable: "100%"
{{- end }}
  selector:
    matchLabels:
      app: kubedash
      {{- include "kubedash.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        app: kubedash
        {{- include "kubedash.labels" . | nindent 8 }}
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . |  sha256sum | trunc 63 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "kubedash.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
      - name: {{ .Chart.Name }}
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        securityContext:
          {{- toYaml .Values.containerSecurityContext | nindent 10 }}
        env:
          - name: TZ
            value: {{ .Values.TimeZone }}
          - name: FLASK_CONFIG
            value: "{{ .Values.flaskConfig }}"
{{- if or (eq .Values.logLevel "DEBUG") (eq .Values.logLevel "HIGH") }}
          - name: VERBOSE_LOG
            value: "True"
{{- end }}
        envFrom:
          - configMapRef: 
              name: {{ include "kubedash.fullname" . }}-config
{{- if .Values.oidc.enabled }}
          - secretRef:
              name: {{ .Values.oidc.secret.name }}
{{- end }}
{{- if .Values.externalDatabase.enabled }}
          - secretRef:
              name: {{ .Values.externalDatabase.secret.name }}
{{- end }}
{{- if .Values.plugins.registryUi.enabled }}
          - name: PLUGIN_REGISTRY_ENABLED
            value: "True"
{{- end }}
{{- if .Values.plugins.helmDashboard.enabled }}
          - name: PLUGIN_HELM_ENABLED
            value: "True"
{{- end }}
        livenessProbe:
          httpGet:
            path: /healthz/live
            port: 8000
          initialDelaySeconds: 5
          timeoutSeconds: 1
        readinessProbe:
          httpGet:
            path: /healthz/ready
            port: 8000
          initialDelaySeconds: 5
          timeoutSeconds: 1
        volumeMounts:
{{- if .Values.persistence.enabled }}
        - name: cache
          mountPath: "/code/kubedash/database"
{{- end }}
        ports:
        - containerPort: 8000
          protocol: TCP
          name: http
      volumes:
{{- if .Values.persistence.enabled }}
      - name: cache
        persistentVolumeClaim:
            claimName: {{ include "kubedash.fullname" . }}-db
{{- end }}
{{- with .Values.nodeSelector }}
      nodeSelector:
        {{- . | toYaml | nindent 8 }}
{{- end }}
{{- with .Values.affinity }}
      affinity:
        {{- . | toYaml | nindent 8 }}
{{- end }}
{{- with .Values.tolerations }}
      tolerations:
        {{- . | toYaml | nindent 8 }}
{{- end }}
