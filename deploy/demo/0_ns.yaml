apiVersion: v1
kind: Namespace
metadata:
  name: network-testing
  annotations:
    metadata.k8s.io/repository: "https://github.com/devopstales/KubeDash"
---
apiVersion: v1
kind: Pod
metadata:
  name: nginx-multi
  namespace: network-testing
spec:
  initContainers:
  - name: init
    image: alpine:latest
    command: ['sh', '-c', 'echo The app is running! && sleep 10']
  - name: init2
    image: ubuntu:latest
    command: ['sh', '-c', 'echo The app is running! && sleep 10']
  containers:
  - image: stefanprodan/podinfo:3.0.1
    imagePullPolicy: IfNotPresent
    name: podinfo
  - image: nginx:latest
    imagePullPolicy: IfNotPresent
    name: nginx
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    deployment.kubernetes.io/revision: "1"
  labels:
    k8s-app: nginx
  name: nginx-d
  namespace: network-testing
spec:
  selector:
    matchLabels:
      k8s-app: nginx
  template:
    metadata:
      labels:
        k8s-app: nginx
    spec:
      containers:
      - image: nginx:latest
        imagePullPolicy: IfNotPresent
        name: frontend
        ports:
        - containerPort: 80
          name: http
          protocol: TCP
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  labels:
    app: nginx
  name: nginx-ss
  namespace: network-testing
spec:
  replicas: 1
  selector:
    matchLabels:
      app: nginx
  serviceName: nginx-ss-svc
  template:
    metadata:
      labels:
        app: nginx
    spec:
      containers:
      - image: nginx:latest
        imagePullPolicy: IfNotPresent
        name: nginx
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  annotations:
    deprecated.daemonset.template.generation: "1"
  labels:
    k8s-app: nginx
  name: nginx
  namespace: network-testing
spec:
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      k8s-app: nginx
  template:
    metadata:
      labels:
        k8s-app: nginx
    spec:
      automountServiceAccountToken: true
      containers:
      - env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: KUBERNETES_SERVICE_HOST
          value: 192.168.0.15
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        image: nginx:latest
        imagePullPolicy: IfNotPresent
        name: nginx
        ports:
        - containerPort: 80
          hostPort: 80
          name: http
          protocol: TCP
      nodeSelector:
        kubernetes.io/os: linux
