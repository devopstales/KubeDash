# syntax = docker/dockerfile:1.2
# ========== Stage 1: Base Image ==========
ARG BUILDPLATFORM=linux/amd64
FROM --platform=$BUILDPLATFORM amazonlinux:2023 AS base


ENV PYTHON_VERSION=3.12

RUN --mount=type=cache,target=/var/cache/dnf \
    dnf -y update && \
    dnf install -y python${PYTHON_VERSION} python${PYTHON_VERSION}-pip shadow-utils && \
    update-alternatives --install /usr/bin/python python /usr/bin/python${PYTHON_VERSION} 20 && \
    update-alternatives --install /usr/bin/pip pip /usr/bin/pip-${PYTHON_VERSION} 20 && \
    update-alternatives --install /usr/bin/pip3 pip3 /usr/bin/pip-${PYTHON_VERSION} 20 && \
    update-alternatives --set python /usr/bin/python${PYTHON_VERSION} && \
    dnf clean all

# ========== Stage 2: Build Image ==========
FROM base AS builder

WORKDIR /code
COPY requirements.txt  /code/

# Install system dependencies
RUN dnf install -y \
    postgresql-libs \
    gcc \
    python3-devel \
    postgresql-devel \
    freetype-devel \
    libpng-devel \
    openblas-devel \
    libffi-devel \
    make \
    && dnf clean all

RUN pip install --no-cache-dir --prefix=/install-dir -U pip setuptools wheel && \
    pip install --no-cache-dir --prefix=/install-dir -r requirements.txt

# ========== Stage 3: Runtime Image ==========
FROM base AS runtime
ARG VERSION
ARG BUILD_DATE

ENV FLASK_CONFIG="production" \
    FLASK_APP="kubedash" \
    KUBEDASH_VERSION=${VERSION}

# https://github.com/opencontainers/image-spec/blob/main/annotations.md#back-compatibility-with-label-schema
LABEL org.opencontainers.image.vendor="devopstales" \
      org.opencontainers.image.authors="devopstales" \
      org.opencontainers.imeg.url="https://devopstales.github.io" \
      org.opencontainers.image.licenses="Apache 2.0" \
      org.opencontainers.image.title="kubedash" \
      org.opencontainers.image.version=${VERSION} \
      org.opencontainers.image.description="General-purpose web UI for Kubernetes clusters" \
      org.opencontainers.image.source="https://github.com/devopstales/kubedash" \
      org.opencontainers.image.documentation="https://devopstales.github.io/kubedash" \
      org.opencontainers.image.created=${BUILD_DATE}

WORKDIR /code/kubedash

# Copy virtual environment from builder
COPY --from=builder /install-dir /usr/local
ENV PATH=/usr/local/bin:$PATH

# Runtime configuration
RUN useradd -u 10001 -d /code/kubedash kubedash && \
    chown -R kubedash:kubedash /code/kubedash && \
    mkdir /tmp/kubedash && \
    chown -R kubedash:kubedash /tmp/kubedash && \
    touch /code/kubedash/CA.crt && \
    chown kubedash:kubedash /code/kubedash/CA.crt && \
    touch /code/kubedash/app-release && \
    chown kubedash:kubedash /code/kubedash/app-release
    
COPY --chown=kubedash:kubedash ./kubedash /code/kubedash

COPY entrypoint.sh /entrypoint.sh
USER kubedash
EXPOSE 8000
CMD ["/entrypoint.sh"]
